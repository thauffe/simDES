Sim <- sim_DES(Time = 25, Step = 0.01, BinSize = 0.25, Nspecies = 100,
SimD = c(0.2, 0.1, 0.3, 0.15),
SimE = c(0.1, 0.1, 0.05, 0.15),
SimQ = c(0.5, 0.4, 0.7, 0.8),
Qtimes = 5.3, alpha = 1)
library(simDES)
Sim <- sim_DES(Time = 25, Step = 0.01, BinSize = 0.25, Nspecies = 100,
SimD = c(0.2, 0.1, 0.3, 0.15),
SimE = c(0.1, 0.1, 0.05, 0.15),
SimQ = c(0.5, 0.4, 0.7, 0.8),
Qtimes = 5.3, alpha = 1)
Sim <- sim_DES(Time = 25, Step = 0.01, BinSize = 0.25, Nspecies = 100,
SimD = c(0.2, 0.1, 0.3, 0.15),
SimE = c(0.1, 0.1, 0.05, 0.15),
SimQ = c(0.5, 0.4, 0.7, 0.8),
Qtimes = 5.3, Ncat = Inf, alpha = 1)
Sim <- sim_DES(Time = 25, Step = 0.1, BinSize = 0.25, Nspecies = 10,
SimD = c(0.2, 0.1),
SimE = c(0.1, 0.1),
SimQ = c(0.5, 0.4),
Ncat = Inf, alpha = 1)
Sim[[1]]
system.time(Sim <- sim_DES(Time = 25, Step = 0.01, BinSize = 0.25, Nspecies = 100,
SimD = c(0.2, 0.1, 0.3, 0.15),
SimE = c(0.1, 0.1, 0.05, 0.15),
SimQ = c(0.5, 0.4, 0.7, 0.8),
Qtimes = 5.3, Ncat = Inf, alpha = 1))
4/60
4/60 *100
5000 * 0.0666
70 / 60
Time = 5
Step = 0.1
BinSize = 0.25
Nspecies = 10
SimD = c(0.7, 0.7)
SimE = c(0.3, 0.3)
SimQ = c(0.7, 0.3)
Qtimes = NULL
Origin = 0
VarD = NULL
VarE = NULL
CovariateDis = NULL
CovariateExt = NULL
DivD = NULL
DivE = NULL
DdE = NULL
Cor = "exponential"
DataInArea = NULL
Ncat = NULL
alpha = NULL
Observation = NULL
GlobExt = NULL
TraitD = NULL
VarTraitD = NULL
TraitE = NULL
VarTraitE = NULL
TraitS = NULL
VarTraitS = NULL
CatTraitD = NULL
CatTraitE = NULL
CatTraitS = NULL
Verbose = FALSE
if (Step > Time)
{
stop("Step size larger than time")
}
if (Step > BinSize)
{
stop("Step size larger than bin size")
}
if (BinSize > Time)
{
stop("BinSize larger than time")
}
TimeTmp <- seq(0, Time, by = BinSize)
if (max(TimeTmp) != Time)
{
BinSize = Time/length(TimeTmp)
if (Verbose)
{
cat(paste("Time not the product of time bin size.\nReset to", BinSize))
}
}
if (Step < 1e-10)
{
stop("Step size small 1e-10 not possible")
}
if ( !all(Origin %in% 0:3) | (any(Origin %in% 0) & any(Origin %in% 1:3)) )
{
stop("Origin should be 0 (i.e. random) or any combination of 1, 2, and/or 3")
}
if (Origin == 0)
{
Origin <- 1:3
}
if ( (!is.null(VarD) & length(SimD) > 2) | (!is.null(DivD) & length(SimD) > 2) )
{
stop("Covariate/Diversity dependent dispersal and shifts in dispersal rate not compatible")
}
if ( (!is.null(VarE) & length(SimE) > 2) | (!is.null(DivE) & length(SimE) > 2) | (!is.null(DdE) & length(SimE) > 2) )
{
stop("Covariate/Diversity/Dispersal dependent extinction and shifts in extinction rate not compatible")
}
if ( sum(is.null(Ncat), is.null(alpha)) == 1 )
{
stop("Ncat and alpha need to be provided for sampling heterogeneity")
}
if (!is.null(DataInArea) & is.null(Observation))
{
if (DataInArea == 1)
{
Origin <- 2
}
if (DataInArea == 2)
{
Origin <- 1
}
}
if (!is.null(Qtimes))
{
Qtimes <- sort(Qtimes, decreasing = TRUE)
Qtimes <- Time - Qtimes
}
TimeSim <- seq(0, Time, by = Step)
Decimals <- nchar(gsub("(.*\\.)|([0]*$)", "", as.character(Step)))
TimeSim <- round(TimeSim, digits = Decimals)
SimDf <- gen_sim_df(TimeSim, Nspecies, Origin, Qtimes,
CovariateDis, CovariateExt, DataInArea, Ncat, Observation, GlobExt)
SimDf <- sim_core2(SimDf, SimD, SimE,
VarD, VarE, DivD, DivE, DdE, Cor,
TraitD, VarTraitD, TraitE, VarTraitE, CatTraitD, CatTraitE)
library(simDES)
if (Step > Time)
{
stop("Step size larger than time")
}
if (Step > BinSize)
{
stop("Step size larger than bin size")
}
if (BinSize > Time)
{
stop("BinSize larger than time")
}
TimeTmp <- seq(0, Time, by = BinSize)
if (max(TimeTmp) != Time)
{
BinSize = Time/length(TimeTmp)
if (Verbose)
{
cat(paste("Time not the product of time bin size.\nReset to", BinSize))
}
}
if (Step < 1e-10)
{
stop("Step size small 1e-10 not possible")
}
if ( !all(Origin %in% 0:3) | (any(Origin %in% 0) & any(Origin %in% 1:3)) )
{
stop("Origin should be 0 (i.e. random) or any combination of 1, 2, and/or 3")
}
if (Origin == 0)
{
Origin <- 1:3
}
if ( (!is.null(VarD) & length(SimD) > 2) | (!is.null(DivD) & length(SimD) > 2) )
{
stop("Covariate/Diversity dependent dispersal and shifts in dispersal rate not compatible")
}
if ( (!is.null(VarE) & length(SimE) > 2) | (!is.null(DivE) & length(SimE) > 2) | (!is.null(DdE) & length(SimE) > 2) )
{
stop("Covariate/Diversity/Dispersal dependent extinction and shifts in extinction rate not compatible")
}
if ( sum(is.null(Ncat), is.null(alpha)) == 1 )
{
stop("Ncat and alpha need to be provided for sampling heterogeneity")
}
if (!is.null(DataInArea) & is.null(Observation))
{
if (DataInArea == 1)
{
Origin <- 2
}
if (DataInArea == 2)
{
Origin <- 1
}
}
if (!is.null(Qtimes))
{
Qtimes <- sort(Qtimes, decreasing = TRUE)
Qtimes <- Time - Qtimes
}
TimeSim <- seq(0, Time, by = Step)
Decimals <- nchar(gsub("(.*\\.)|([0]*$)", "", as.character(Step)))
TimeSim <- round(TimeSim, digits = Decimals)
SimDf <- gen_sim_df(TimeSim, Nspecies, Origin, Qtimes,
CovariateDis, CovariateExt, DataInArea, Ncat, Observation, GlobExt)
SimDf <- sim_core2(SimDf, SimD, SimE,
VarD, VarE, DivD, DivE, DdE, Cor,
TraitD, VarTraitD, TraitE, VarTraitE, CatTraitD, CatTraitE)
Pres = SimQ
Idx <- ifelse(SimDf$Strata == 1, 2, 2 * SimDf$Strata)
PresA <- Pres[Idx - 1]
PresB <- Pres[Idx]
PresA
!is.null(Ncat)
(!is.null(TraitS))
(!is.null(CatTraitS))
(!is.null(DataInArea))
DataInArea2 <- 0
Step
SA <- 1 - exp(-Step * PresA)
SB <- 1 - exp(-Step * PresB)
SimDf$stateSampling <- 0
W1 <- which(SimDf$state == 2)
R1 <- runif(length(W1), 0, 1)
W1
R1
SA
ifelse(R1 > SA[W1], 0, 1)
sum( ifelse(R1 > SA[W1], 0, 1) > 0)
sum( ifelse(R1 > SA[W1], 0, 1) > 0) / length(W1)
# Area B
W2 <- which(SimDf$state == 3)
R2 <- runif(length(W2), 0, 1)
sum( ifelse(R2 > SB[W2], 0, 2) > 0) / length(W2)
SB
PresB
PresA
Step
library(simDES)
